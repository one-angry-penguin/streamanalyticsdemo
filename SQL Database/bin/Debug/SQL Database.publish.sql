/*
Deployment script for sademo

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "sademo"
:setvar DefaultFilePrefix "sademo"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
PRINT N'Creating [dbo].[Machines]...';


GO
CREATE TABLE [dbo].[Machines] (
    [Id]          INT          IDENTITY (1, 1) NOT NULL,
    [MachineId]   VARCHAR (50) NOT NULL,
    [MachineType] VARCHAR (50) NOT NULL,
    [Broken]      BIT          NOT NULL,
    [Active]      BIT          NOT NULL,
    [CreateDate]  DATETIME     NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Orders]...';


GO
CREATE TABLE [dbo].[Orders] (
    [Id]           INT      IDENTITY (1, 1) NOT NULL,
    [WidgetCount]  INT      NOT NULL,
    [CreateDate]   DATETIME NOT NULL,
    [CompleteDate] DATETIME NULL,
    [Completed]    BIT      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[OrderStatus]...';


GO
CREATE TABLE [dbo].[OrderStatus] (
    [Id]             INT IDENTITY (1, 1) NOT NULL,
    [OrderId]        INT NOT NULL,
    [PendingCount]   INT NOT NULL,
    [SmashedCount]   INT NOT NULL,
    [SlashedCount]   INT NOT NULL,
    [CompletedCount] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Settings]...';


GO
CREATE TABLE [dbo].[Settings] (
    [Id]           INT           IDENTITY (1, 1) NOT NULL,
    [SettingName]  VARCHAR (50)  NOT NULL,
    [SettingValue] VARCHAR (100) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[Machines]...';


GO
ALTER TABLE [dbo].[Machines]
    ADD DEFAULT (newid()) FOR [MachineId];


GO
PRINT N'Creating unnamed constraint on [dbo].[Machines]...';


GO
ALTER TABLE [dbo].[Machines]
    ADD DEFAULT ('Smasher') FOR [MachineType];


GO
PRINT N'Creating unnamed constraint on [dbo].[Machines]...';


GO
ALTER TABLE [dbo].[Machines]
    ADD DEFAULT (0) FOR [Broken];


GO
PRINT N'Creating unnamed constraint on [dbo].[Machines]...';


GO
ALTER TABLE [dbo].[Machines]
    ADD DEFAULT (1) FOR [Active];


GO
PRINT N'Creating unnamed constraint on [dbo].[Machines]...';


GO
ALTER TABLE [dbo].[Machines]
    ADD DEFAULT (GETDATE()) FOR [CreateDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[Orders]...';


GO
ALTER TABLE [dbo].[Orders]
    ADD DEFAULT (50) FOR [WidgetCount];


GO
PRINT N'Creating unnamed constraint on [dbo].[Orders]...';


GO
ALTER TABLE [dbo].[Orders]
    ADD DEFAULT (GETDATE()) FOR [CreateDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[Orders]...';


GO
ALTER TABLE [dbo].[Orders]
    ADD DEFAULT (0) FOR [Completed];


GO
PRINT N'Creating unnamed constraint on [dbo].[OrderStatus]...';


GO
ALTER TABLE [dbo].[OrderStatus]
    ADD DEFAULT (0) FOR [PendingCount];


GO
PRINT N'Creating unnamed constraint on [dbo].[OrderStatus]...';


GO
ALTER TABLE [dbo].[OrderStatus]
    ADD DEFAULT (0) FOR [SmashedCount];


GO
PRINT N'Creating unnamed constraint on [dbo].[OrderStatus]...';


GO
ALTER TABLE [dbo].[OrderStatus]
    ADD DEFAULT (0) FOR [SlashedCount];


GO
PRINT N'Creating unnamed constraint on [dbo].[OrderStatus]...';


GO
ALTER TABLE [dbo].[OrderStatus]
    ADD DEFAULT (0) FOR [CompletedCount];


GO
PRINT N'Creating [dbo].[FK_OrderStatus_ToOrder]...';


GO
ALTER TABLE [dbo].[OrderStatus] WITH NOCHECK
    ADD CONSTRAINT [FK_OrderStatus_ToOrder] FOREIGN KEY ([OrderId]) REFERENCES [dbo].[Orders] ([Id]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

INSERT INTO s
	(SettingName
	,SettingValue)
SELECT
	seed.SettingName
	,seed.SettingValue
FROM (
	SELECT 'MaxMachines' AS SettingName, '20' AS SettingValue
	UNION SELECT 'MaxOrderSize' AS SettingName, '200' AS SettingValue
	UNION SELECT 'MaxActiveOrders' AS SettingName, '10' AS SettingValue
	UNION SELECT 'AverageProductionTime' AS SettingName, '5' AS SettingValue
	UNION SELECT 'ProductionTimeVariability' AS SettingName, '10' AS SettingValue
	UNION SELECT 'AverageFailureRate' AS SettingName, '.01' AS SettingValue
	UNION SELECT 'FailureRateVariability' AS SettingName, '10' AS SettingValue
	UNION SELECT 'MachineFailureRate' AS SettingName, '.01' AS SettingValue
) seed
LEFT JOIN dbo.Settings s
	on seed.SettingName = s.SettingName
 WHERE s.SettingName IS NULL
GO

GO
